#!/bin/bash


make_args () {
    query_list=$1
    clir_dir=$2
    for query in $query_list; do

        while read -r doc_score; do
               doc=`echo $doc_score | cut -d " " -f1`
               score=`echo $doc_score | cut -d " " -f3`
               if [ ! -z "$doc" ]; then
                   printf "$query $doc $score\n"
               fi
        done <<< `cat /$clir_dir/UMD-CLIR-workECDir/$query.tsv | grep -E "\tY\t"`

    done
}

get_markup_gen () {
    if [ `is_example_of $1 $2 $3` == "True" ]; then
        return "summarkup.generators.exampleofv1.ExampleOfV1"
    elif [ `is_morph $1 $2 $3` == "True" ]; then
        return "summarkup.generators.morphv1.MorphV1"
    elif [ `is_conceptual $1 $2 $3` == "True" ]; then
        return "summarkup.generators.conceptv1.ConceptV1"
    elif [ `is_lexical $1 $2 $3` == "True" ] \
            && [ `is_simple $1 $2 $3` == "True" ]; then
        return "summarkup.generators.lexicalv1.LexicalV1"
    elif [ `is_lexical $1 $2 $3` == "True" ] \
            && [ `is_simple $1 $2 $3` == "False" ]; then
        return "summarkup.generators.lexicalmultiwordv1.LexicalMultiWordV1"
    else
        return "NONE"
    fi
}

summarize () {
    output_dir=$4
    nc=`num_components $QUERY_PORT $1`
        echo "$1 $2 $3 1"
        annotate_material $ANNOTATION_PORT $1 $2 1 \
            "$output_dir/annotations/$1/$1.$2.c1.pkl"
        generate_markup summarkup.generators.conceptv1.ConceptV1 \
            $output_dir/annotations/$1/$1.$2.c1.pkl \
            $output_dir/markup/$1/$1.$2.c1.json \
            --quiet
        generate_image scripts/configs/summary_style.v1.css \
            $output_dir/markup/$1/$1.$2.c1.json \
            $output_dir/images/$1.$2.c1.png

    if [ "$nc" == "2" ]; then

        echo "$1 $2 $3 2"
        annotate_material $ANNOTATION_PORT $1 $2 2 \
            $output_dir/annotations/$1/$1.$2.c2.pkl
        generate_markup summarkup.generators.conceptv1.ConceptV1 \
            $output_dir/annotations/$1/$1.$2.c2.pkl \
            $output_dir/markup/$1/$1.$2.c2.json \
            --quiet
        generate_image scripts/configs/summary_style.v1.css \
            $output_dir/markup/$1/$1.$2.c2.json \
            $output_dir/images/$1.$2.c2.png
    fi

}

export -f summarize

if [[ $3 != "" ]]; then
    clir_dir="clir-$3"
    output_dir=/outputs/$3
else
    clir_dir="clir"
    output_dir=/outputs/
fi

args=`make_args "$1" $clir_dir`
if [ "$args" == "" ]; then                                                     
    exit                                                                   
fi 

parallel --link -j$2 summarize \
    ::: `echo "$args" | cut -d " " -f1` \
    ::: `echo "$args" | cut -d " " -f2` \
    ::: `echo "$args" | cut -d " " -f3` \
    ::: $output_dir
    

